kind: Pod
apiVersion: v1
metadata:
  name: foo-app
  labels:
    app: foo
spec:
  containers:
  - command:
    - /agnhost
    - netexec
    - --http-port
    - "8080"
    image: registry.k8s.io/e2e-test-images/agnhost:2.39
    name: foo-app
    resources:
      limits:
        memory: "128Mi"
        cpu: "100m"
---
kind: Service
apiVersion: v1
metadata:
  name: foo-service
spec:
  selector:
    app: foo
  ports:
  # Default port used by the image
  - port: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aa-ingress
  annotations:
   nginx.ingress.kubernetes.io/auth-url: "http://reverse.default.svc.cluster.local:1338/auth" # this path domain should be resolveable by the cluster
   nginx.ingress.kubernetes.io/auth-signin: "https://zta-demo.localhost.dlou.es/register" # this domain should be resolvable by client           
spec:
  tls:
    - secretName: zta-demo.localhost.dlou.es
  rules:
  - host: zta-demo.localhost.dlou.es
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: foo-service
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: auth-ingress
spec:
  tls:
    - secretName: zta-demo.localhost.dlou.es
  rules:
  - host: zta-demo.localhost.dlou.es
    http:
      paths:
      - pathType: Prefix
        path: /oauth2
        backend:
          service:
            name: oauth2-proxy
            port:
              number: 4180
      - pathType: Prefix
        path: /webauthn
        backend:
          service:
            name: webauthn
            port:
              number: 8080
      - pathType: Prefix
        path: /register
        backend:
          service:
            name: reverse
            port:
              number: 1338