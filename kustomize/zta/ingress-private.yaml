apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: private
  # Only identity validation - Identity Aware Proxy
  annotations:
    # nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.default.svc.cluster.local/oauth2/auth" # this path domain should be resolveable by the cluster
    # nginx.ingress.kubernetes.io/auth-signin: "/oauth2/sign_in" # this domain should be resolvable by client           
    # nginx.ingress.kubernetes.io/auth-response-headers: "X-Auth-Request-User"
  # Identity + Device Authorisation - Context Aware Proxy
  # # annotations:
    nginx.ingress.kubernetes.io/auth-url: "http://auth-chainer.default.svc.cluster.local/auth" # this path domain should be resolveable by the cluster
    nginx.ingress.kubernetes.io/auth-signin: "/register" # this domain should be resolvable by client           
    nginx.ingress.kubernetes.io/auth-response-headers: "X-Auth-Request-User"
spec:
  tls:
  - secretName: wildcard-localhost-dlou-es
  rules:
  - host: private.localhost.dlou.es
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: echo-server
            port:
              name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: auth-page
  # This ingress doesn't have any auth annotation,
  # because otherwise we won't be able to log the user.
  # note: the '/' path of the app is declared in private ingress.
spec:
  tls:
  - secretName: wildcard-localhost-dlou-es
  rules:
  - host: private.localhost.dlou.es
    http:
      paths:
      - pathType: Prefix
        path: /oauth2
        backend:
          service:
            name: oauth2-proxy
            port:
              name: http
      - pathType: Prefix
        path: /register
        backend:
          service:
            name: auth-chainer
            port:
              name: http
      - pathType: Prefix
        path: /webauthn
        backend:
          service:
            name: webauthn
            port:
              name: http